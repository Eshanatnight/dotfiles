# Custom Aliases
## clear the terminal
alias cls=clear
## list all files in the current directory
alias ls="eza --icons --group-directories-first"
## list all files in the current directory
alias la="eza --icons --group-directories-first -al"
## clear the terminal
alias cls="clear"
## nvim -> vim keymapping
alias vim="nvim"
## source the zshrc
alias s="source ~/.zshrc"
## git clone a repo recursively
alias gcr="git clone --recursive"
## use trash instead of rm
alias rm=trash
## format json from clipboard and copy back to clipboard
alias j="pbpaste | jq . | pbcopy"
## clip -> pbcopy
alias clip="pbcopy"
## fzf to code editors
alias x="find ~ -type d -maxdepth 2 | fzf | xargs -o zed"
alias c="find ~ -type d -maxdepth 2 | fzf | xargs -o code"
alias v="find ~ -type d -maxdepth 2 | fzf | xargs -o nvim"

# use bat for help output
alias -g -- -h='-h 2>&1 | bat --language=help --style=plain'
alias -g -- --help='--help 2>&1 | bat --language=help --style=plain'
# alias for cat to bat
alias cat=bat
## alias for python scripts
## internet speedtest
alias spt=spt.py
## some commands i always forget
alias cs=cs.py
## luajit shorthand
alias lua=luajit

# Wasmer
export WASMER_DIR="/Users/kellsatnite/.wasmer"
[ -s "$WASMER_DIR/wasmer.sh" ] && source "$WASMER_DIR/wasmer.sh"

# path to my scripts and tools
export PATH=/Users/kellsatnite/tools/scripts:$PATH
export PATH=/Users/kellsatnite/tools/vcpkg:$PATH

# Functions
## shorthand to jump into a directory
function z () {
    cd "$(find ~ -type d -maxdepth 2 | fzf)"
}

function bd() {
    git diff --name-only --relative --diff-filter=d | xargs bat --diff
}

## shorthand to create a directory and jump into it
function take {
    mkdir -p $1
    cd $1
}

function ex () {

    if [ -f $1 ] ; then
        case $1 in
            *.tar.bz2) tar xjf $1 ;;
            *.tar.gz) tar xzf $1 ;;
            *.bz2) bunzip2 $1 ;;
            *.rar) unrar x $1 ;;
            *.gz) gunzip $1 ;;
            *.tar) tar xf $1 ;;
            *.tbz2) tar xjf $1 ;;
            *.tgz) tar xzf $1 ;;
            *.zip) unzip $1 ;;
            *.Z) uncompress $1 ;;
            *.7z) 7z x $1 ;;
            *.tar.xz) tar -xf $1 ;;
            *.tar.zst) unzstd $1 ;;
            *) echo "'$1' cannot be extracted via ex()" ;;
        esac
    else
        echo "'$1' is not a valid file"
	fi

}

# starship prompt
eval "$(starship init zsh)"

# zoxide
eval "$(zoxide init --cmd cd zsh)"

# fzf
eval "$(fzf --zsh)"


# Rust Config
export RUST_BACKTRACE=1
export RUST_LOG=debug
# export CARGO_TARGET_DIR="/home/kellsatnite/.rustlang/target/"


# Parseable Config
export P_STAGING_DIR=~/dev/parseable/staging
export P_ADDR=0.0.0.0:8000
export P_USERNAME=admin
export P_PASSWORD=admin
export P_S3_URL=http://127.0.0.1:9000
export P_S3_BUCKET=somebucket
export P_S3_ACCESS_KEY=minioadmin
export P_S3_SECRET_KEY=minioadmin
export P_S3_REGION=us-east-1
export P_RECORDS_PER_REQUEST=102400
export P_PARQUET_COMPRESSION_ALGO="gzip"
export P_QUERY_MEMORY_LIMIT=2

# for auto completions
autoload -Uz compinit && compinit

# FZF Colors
export FZF_DEFAULT_OPTS=" \
--color=bg+:#363a4f,bg:#24273a,spinner:#f4dbd6,hl:#ed8796 \
--color=fg:#cad3f5,header:#ed8796,info:#c6a0f6,pointer:#f4dbd6 \
--color=marker:#f4dbd6,fg+:#cad3f5,prompt:#c6a0f6,hl+:#ed8796"


# bun completions
[ -s "/Users/kellsatnite/.bun/_bun" ] && source "/Users/kellsatnite/.bun/_bun"

# bun
export BUN_INSTALL="$HOME/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"

export PATH="/opt/homebrew/opt/llvm/bin:$PATH"
export LDFLAGS="-L/opt/homebrew/opt/llvm/lib"
export CPPFLAGS="-I/opt/homebrew/opt/llvm/include"

function gco() {
  echo "running gco func"
  if [ $# -eq 0 ]
  then
    # search for a branch w/ fuzzy finder and then check it out
    git branch | fzf | xargs git checkout
  else
    # pass the args to git checkout
    git checkout $*
  fi
}
