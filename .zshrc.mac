# Custom Aliases
## clear the terminal
alias cls=clear
## list all files in the current directory
alias ls="eza --icons --group-directories-first"
## list all files in the current directory
alias la="eza --icons --group-directories-first -al"
## nvim -> vim keymapping
alias vim="nvim"
## source the zshrc
alias s="source ~/.zshrc"
## git clone a repo recursively
alias gcr="git clone --recursive"
## use trash instead of rm
alias rm=trash
## format json from clipboard and copy back to clipboard
alias j="pbpaste | jq . | pbcopy"
## alias for tree
alias tree="eza --tree --level=3"
## clip -> pbcopy
alias clip="pbcopy"
## fzf to code editors
alias x="find ~ -type d -not -path '*/\.Trash/*' -maxdepth 2 | fzf --reverse --header='Open A File In Zed' --header-first | xargs -o zed"
alias c="find ~ -type d -not -path '*/\.Trash/*' -maxdepth 2  | fzf --reverse --header='Open A File In VsCode' --header-first | xargs -o code"
alias v="find . -type f -not -path '*/target/*' -not -path '*/helm*/*' -not -path '*/build/*' -not -path '*/\.git/*' -not -path '*/venv/*' -not -path '*/.mypy*' | fzf --reverse --header='Open A File In NeoVim(Default Current Dir)' --header-first --preview 'bat --color=always --style=numbers --line-range=:500 {}' | xargs -o nvim"
## bat diff
alias bd="git diff --name-only --relative --diff-filter=d | xargs bat --diff"
## git aliases
alias pull="git pull"
alias f="git fetch"
alias lg="git lg"


# use bat for help output
alias -g -- -h='-h 2>&1 | bat --language=help --style=plain'
alias -g -- --help='--help 2>&1 | bat --language=help --style=plain'
## alias for python scripts
## internet speedtest
alias spt=spt.py
## some commands i always forget
alias cs=cs.py
## luajit shorthand
alias lua=luajit

# path to scripts and tools
export PATH="$BUN_INSTALL/bin:$PATH"
export PATH=/Users/kellsatnite/tools/scripts:$PATH
export PATH=/Users/kellsatnite/tools/vcpkg:$PATH

# Functions
## shorthand to jump into a directory
function z () {
    cd "$(find ~ -type d -maxdepth 2 | fzf --reverse)" || exit
}

## shorthand to create a directory and jump into it
function take {
    mkdir -p "$1"
    cd "$1" || exit
}

## shorthand to extract a zip
function ex () {
    if [ -f "$1" ] ; then
        case $1 in
            *.tar.bz2) tar xjf "$1" ;;
            *.tar.gz) tar xzf "$1" ;;
            *.bz2) bunzip2 "$1" ;;
            *.rar) unrar x "$1" ;;
            *.gz) gunzip "$1" ;;
            *.tar) tar xf "$1" ;;
            *.tbz2) tar xjf "$1" ;;
            *.tgz) tar xzf "$1" ;;
            *.zip) unzip "$1" ;;
            *.Z) uncompress "$1" ;;
            *.7z) 7z x "$1" ;;
            *.tar.xz) tar -xf "$1" ;;
            *.tar.zst) unzstd "$1" ;;
            *) echo "'$1' cannot be extracted via ex()" ;;
        esac
    else
        echo "'$1' is not a valid file"
	fi
}

## use fzf to checkout a git branch
function gc() {
  echo "running gco func"
  if [ $# -eq 0 ]
  then
    git branch | fzf --reverse --header='Checkout a git branch' --header-first | xargs git checkout
  else
    # pass the args to git checkout
    git checkout "$*"
  fi
}

## use fzf to switch to a remote git branch
function gs() {
  echo "running gs func"
  if [ $# -eq 0 ]
  then
  git branch -a | grep 'remotes/origin/' | sed 's#remotes/origin/##' | fzf --reverse --header='Switch to a remote git branch' --header-first | xargs git switch
  else
    git switch "$*"
  fi
}

unalias gd

function gd() {
    branch=$(git branch | fzf --reverse --header='Checkout a git branch' --header-first --disabled | sed 's/^\* //;s/^  //')
    header="Are You Sure You want to Delete $branch"
    response=$(echo "Yes\n No" | fzf --reverse --header="$header" --header-first)
    if [[ "$response" == "Yes" ]]
    then
        git branch -D $branch;
    fi
}


# starship prompt
eval "$(starship init zsh)"

# zoxide
eval "$(zoxide init --cmd cd zsh)"

# fzf
eval "$(fzf --zsh)"


# Rust Config
export RUST_BACKTRACE=1
export RUST_LOG=debug
export CARGO_HOME="/Users/kellsatnite/.cargo"
# export CARGO_TARGET_DIR="/home/kellsatnite/.rustlang/target/"

## cmake config
export CMAKE_EXPORT_COMPILE_COMMANDS=1
export CMAKE_EXE_LINKER_FLAGS="-fuse-ld=/usr/local/bin/ld64.sold"
CMAKE_SHARED_LINKER_FLAGS="-fuse-ld=/usr/local/bin/ld64.sold"


# for auto completions
autoload -Uz compinit && compinit

# FZF Colors
export FZF_DEFAULT_OPTS=" \
--color=bg+:#363a4f,bg:#24273a,spinner:#f4dbd6,hl:#ed8796 \
--color=fg:#cad3f5,header:#ed8796,info:#c6a0f6,pointer:#f4dbd6 \
--color=marker:#f4dbd6,fg+:#cad3f5,prompt:#c6a0f6,hl+:#ed8796"


# bun completions
[ -s "/Users/kellsatnite/.bun/_bun" ] && source "/Users/kellsatnite/.bun/_bun"

# Wasmer
export WASMER_DIR="/Users/kellsatnite/.wasmer"
[ -s "$WASMER_DIR/wasmer.sh" ] && source "$WASMER_DIR/wasmer.sh"

